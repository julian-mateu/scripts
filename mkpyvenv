#!/bin/bash
set -e -o pipefail

main() {
    parse_arguments "${@}"

    python -m venv "${VENV_NAME}"

    # shellcheck disable=SC1091
    source "${VENV_NAME}/bin/activate"

    pip install --upgrade pip

    if [[ -z "${NO_DEPS}" ]]; then

        if [[ -z "${NO_REQS}" ]]; then
            if [[ "$(uname -m)" = "arm64" ]]; then
                LDFLAGS="-L/opt/homebrew/Cellar/gettext/0.21/lib -I/usr/local/opt/openssl/include -L/usr/local/opt/openssl/lib -L/opt/homebrew/Cellar/re2/20220601/lib" pip install --no-cache -r requirements.txt
            else
                pip install -r requirements.txt
            fi
        fi

        if [[ -e setup.cfg || -e setup.py || -e pyproject.toml ]]; then
            if [[ "$(uname -m)" = "arm64" ]]; then
                LDFLAGS="-L/opt/homebrew/Cellar/gettext/0.21/lib -I/usr/local/opt/openssl/include -L/usr/local/opt/openssl/lib -L/opt/homebrew/Cellar/re2/20220601/lib" pip install --no-cache -e .
            else
                pip install -e .
            fi
        fi
    fi
}

parse_arguments() {
    while getopts "hnr" o; do
        case "${o}" in
        h)
            usage
            exit 0
            ;;
        n)
            NO_DEPS=true
            ;;
        r)
            NO_REQS=true
            ;;
        \? | *)
            usage
            exit 1
            ;;
        esac
    done

    shift $((OPTIND - 1))

    if [[ "${#}" -ne 1 ]]; then
        echo "Illegal number of parameters ${0}: got ${#} but expected exactly 1: ${*}" >&2
        usage
        exit 1
    fi

    VENV_NAME=${1:-env}
}

usage() {
    cat <<-EOF >&2
		Usage: ${0##*/} [-hnr] <ENV_NAME>
		
		Creates a new virtual environment named <ENV_NAME> and installs the dependencies.
		
		    -h          display this help and exit
		    -n          do not install dependencies
		    -r          do not install requirements.txt file
	EOF
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main "${@}"
fi
